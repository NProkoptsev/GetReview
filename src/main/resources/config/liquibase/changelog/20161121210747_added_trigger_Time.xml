<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <property name="now" value="now()" dbms="mysql,h2"/>
    <property name="now" value="current_timestamp" dbms="postgresql"/>
    <property name="now" value="sysdate" dbms="oracle"/>

    <property name="autoIncrement" value="true" dbms="mysql,h2,postgresql,oracle"/>

    <property name="floatType" value="float4" dbms="postgresql, h2"/>
    <property name="floatType" value="float" dbms="mysql, oracle"/>

    <changeSet id="1" author="me">
        <sql endDelimiter="/">
            ALTER TABLE review
            ADD created timestamp with time zone
            /
        </sql>
    </changeSet>

    <changeSet id="2" author="me">
        <sql endDelimiter="/">
            ALTER TABLE review
            ADD updated timestamp with time zone
            /
        </sql>
    </changeSet>

    <changeSet id="3" author="me">
        <sql endDelimiter="/">
            CREATE FUNCTION createdDate() RETURNS TRIGGER
            LANGUAGE plpgsql
            AS $$
            BEGIN
            NEW.created := CURRENT_TIMESTAMP;
            RETURN NEW;
            END;
            $$;
            /
        </sql>
    </changeSet>

    <changeSet id="4" author="me">
        <sql endDelimiter="/">
            CREATE FUNCTION updatedDate() RETURNS TRIGGER
            LANGUAGE plpgsql
            AS $$
            BEGIN
            NEW.updated := CURRENT_TIMESTAMP;
            RETURN NEW;
            END;
            $$;
            /
        </sql>
    </changeSet>

    <changeSet id="5" author="me">
        <sql endDelimiter="/">
            CREATE TRIGGER trigger_for_create
            before insert ON review
            FOR EACH ROW
            EXECUTE PROCEDURE createdDate();
            /
        </sql>
    </changeSet>

    <changeSet id="6" author="me">
        <sql endDelimiter="/">
            CREATE TRIGGER trigger_for_update
            before update ON review
            FOR EACH ROW
            EXECUTE PROCEDURE updatedDate();
            /
        </sql>
    </changeSet>

</databaseChangeLog>
